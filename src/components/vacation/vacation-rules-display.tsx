
import { User, WorkGroup } from "@/types";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { Info } from "lucide-react";

interface VacationRulesDisplayProps {
  user: User;
}

export function VacationRulesDisplay({ user }: VacationRulesDisplayProps) {
  const getWorkGroupRules = (workGroup: WorkGroup): { title: string; rules: string[]; examples: string[] } => {
    switch (workGroup) {
      case 'Grupo Localizado':
        return {
          title: "Reglas para Grupo Localizado",
          rules: [
            "Las vacaciones deben tomarse en quincenas naturales completas",
            "Per√≠odo 1: Del 1 al 15 de cada mes",
            "Per√≠odo 2: Del 16 al √∫ltimo d√≠a del mes",
            "No se permiten per√≠odos parciales"
          ],
          examples: [
            "‚úÖ Del 1 al 15 de agosto",
            "‚úÖ Del 16 al 31 de julio", 
            "‚ùå Del 5 al 19 de agosto"
          ]
        };
        
      case 'Grupo Programado':
        return {
          title: "Reglas para Grupo Programado",
          rules: [
            "Las vacaciones deben comenzar en lunes y terminar en domingo",
            "M√≠nimo: semanas naturales completas",
            "Alternativa: bloques de 4 d√≠as consecutivos",
            "Debe mantener la continuidad del turno"
          ],
          examples: [
            "‚úÖ Del lunes 5 al domingo 11 de agosto",
            "‚úÖ Bloque de 4 d√≠as: lunes a jueves",
            "‚ùå Del mi√©rcoles al martes siguiente"
          ]
        };
        
      case 'Urgente 24h':
        return {
          title: "Reglas para Urgente 24h",
          rules: [
            "Bloques espec√≠ficos de 2 o 3 d√≠as consecutivos",
            "Alternativa: bloque largo de 32 d√≠as",
            "Debe coordinarse con cobertura de urgencias",
            "Prioridad seg√∫n antig√ºedad en caso de conflicto"
          ],
          examples: [
            "‚úÖ 2 d√≠as: viernes y s√°bado",
            "‚úÖ 3 d√≠as: viernes, s√°bado y domingo",
            "‚úÖ Bloque de 32 d√≠as en verano"
          ]
        };
        
      case 'Urgente 12h':
        return {
          title: "Reglas para Urgente 12h",
          rules: [
            "Quincenas naturales completas",
            "Del 1 al 15 o del 16 al final del mes",
            "Coordinaci√≥n obligatoria con turno complementario",
            "Solicitud con 30 d√≠as de antelaci√≥n m√≠nima"
          ],
          examples: [
            "‚úÖ Del 1 al 15 de septiembre",
            "‚úÖ Del 16 al 30 de junio",
            "‚ùå Del 10 al 25 de cualquier mes"
          ]
        };
        
      case 'GES Sala Sanitaria':
        return {
          title: "Reglas para GES Sala Sanitaria",
          rules: [
            "Bloques de 10 d√≠as laborables",
            "Alternativa: bloques de 12 d√≠as laborables",
            "Debe garantizarse cobertura sanitaria",
            "Rotaci√≥n equitativa entre personal"
          ],
          examples: [
            "‚úÖ 10 d√≠as laborables consecutivos",
            "‚úÖ 12 d√≠as laborables consecutivos",
            "‚ùå Per√≠odos inferiores a 10 d√≠as"
          ]
        };
        
      case 'Top Programado':
        return {
          title: "Reglas para Top Programado",
          rules: [
            "Semanas naturales: lunes a domingo",
            "Alternativa: bloques de 4 d√≠as consecutivos",
            "Debe mantener continuidad operativa",
            "Coordinaci√≥n con turnos adyacentes"
          ],
          examples: [
            "‚úÖ Semana completa: lunes a domingo",
            "‚úÖ 4 d√≠as: martes a viernes",
            "‚ùå Per√≠odos que corten la semana laboral"
          ]
        };
        
      case 'Grupo 1/3':
        return {
          title: "Reglas para Grupo 1/3",
          rules: [
            "Quincenas naturales obligatorias",
            "Primera quincena: del 1 al 15",
            "Segunda quincena: del 16 al final del mes",
            "Rotaci√≥n entre los tercios del grupo"
          ],
          examples: [
            "‚úÖ Del 1 al 15 de octubre",
            "‚úÖ Del 16 al 31 de diciembre",
            "‚ùå Cualquier otro per√≠odo"
          ]
        };
        
      default:
        return {
          title: "Reglas Generales de Vacaciones",
          rules: [
            "Solicitud con antelaci√≥n m√≠nima de 15 d√≠as",
            "M√°ximo 22 d√≠as al a√±o (+ d√≠as por antig√ºedad)",
            "No acumulables al a√±o siguiente",
            "Aprobaci√≥n sujeta a necesidades del servicio"
          ],
          examples: [
            "‚úÖ Cualquier per√≠odo dentro de los d√≠as disponibles",
            "‚ö†Ô∏è Verificar disponibilidad con antelaci√≥n"
          ]
        };
    }
  };

  const rules = getWorkGroupRules(user.workGroup as WorkGroup);

  return (
    <Alert className="mb-6">
      <Info className="h-4 w-4" />
      <AlertTitle className="text-lg font-semibold">{rules.title}</AlertTitle>
      <AlertDescription className="mt-3 space-y-4">
        <div>
          <h4 className="font-medium text-sm mb-2">üìã Condiciones obligatorias:</h4>
          <ul className="list-disc list-inside space-y-1 text-sm">
            {rules.rules.map((rule, index) => (
              <li key={index} className="text-muted-foreground">{rule}</li>
            ))}
          </ul>
        </div>
        
        <div>
          <h4 className="font-medium text-sm mb-2">üí° Ejemplos:</h4>
          <ul className="space-y-1 text-sm">
            {rules.examples.map((example, index) => (
              <li key={index} className="text-muted-foreground">{example}</li>
            ))}
          </ul>
        </div>
        
        <div className="pt-2 border-t">
          <p className="text-xs text-muted-foreground">
            <strong>Importante:</strong> El incumplimiento de estas reglas resultar√° en el rechazo autom√°tico de la solicitud.
            Para casos excepcionales, contactar con RRHH con antelaci√≥n.
          </p>
        </div>
      </AlertDescription>
    </Alert>
  );
}
